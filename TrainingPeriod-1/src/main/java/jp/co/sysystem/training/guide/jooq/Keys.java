/*
 * This file is generated by jOOQ.
 */
package jp.co.sysystem.training.guide.jooq;


import jp.co.sysystem.training.guide.jooq.tables.FileHistory;
import jp.co.sysystem.training.guide.jooq.tables.MarkdownFile;
import jp.co.sysystem.training.guide.jooq.tables.MarkdownFileHistory;
import jp.co.sysystem.training.guide.jooq.tables.User;
import jp.co.sysystem.training.guide.jooq.tables.records.FileHistoryRecord;
import jp.co.sysystem.training.guide.jooq.tables.records.MarkdownFileHistoryRecord;
import jp.co.sysystem.training.guide.jooq.tables.records.MarkdownFileRecord;
import jp.co.sysystem.training.guide.jooq.tables.records.UserRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * trainingguidebook.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FileHistoryRecord> KEY_FILE_HISTORY_PRIMARY = Internal.createUniqueKey(FileHistory.FILE_HISTORY, DSL.name("KEY_file_history_PRIMARY"), new TableField[] { FileHistory.FILE_HISTORY.ID }, true);
    public static final UniqueKey<MarkdownFileRecord> KEY_MARKDOWN_FILE_PRIMARY = Internal.createUniqueKey(MarkdownFile.MARKDOWN_FILE, DSL.name("KEY_markdown_file_PRIMARY"), new TableField[] { MarkdownFile.MARKDOWN_FILE.FILE_NO }, true);
    public static final UniqueKey<MarkdownFileRecord> KEY_MARKDOWN_FILE_UK_FILE_ID = Internal.createUniqueKey(MarkdownFile.MARKDOWN_FILE, DSL.name("KEY_markdown_file_uk_file_id"), new TableField[] { MarkdownFile.MARKDOWN_FILE.FILE_ID }, true);
    public static final UniqueKey<MarkdownFileRecord> KEY_MARKDOWN_FILE_UK_TASK_SORT = Internal.createUniqueKey(MarkdownFile.MARKDOWN_FILE, DSL.name("KEY_markdown_file_uk_task_sort"), new TableField[] { MarkdownFile.MARKDOWN_FILE.TASK, MarkdownFile.MARKDOWN_FILE.SORT_ORDER }, true);
    public static final UniqueKey<MarkdownFileHistoryRecord> KEY_MARKDOWN_FILE_HISTORY_PRIMARY = Internal.createUniqueKey(MarkdownFileHistory.MARKDOWN_FILE_HISTORY, DSL.name("KEY_markdown_file_history_PRIMARY"), new TableField[] { MarkdownFileHistory.MARKDOWN_FILE_HISTORY.HISTORY_NO }, true);
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, DSL.name("KEY_user_PRIMARY"), new TableField[] { User.USER.USERNAME }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<MarkdownFileHistoryRecord, MarkdownFileRecord> FK_HISTORY_FILE = Internal.createForeignKey(MarkdownFileHistory.MARKDOWN_FILE_HISTORY, DSL.name("fk_history_file"), new TableField[] { MarkdownFileHistory.MARKDOWN_FILE_HISTORY.FILE_NO }, Keys.KEY_MARKDOWN_FILE_PRIMARY, new TableField[] { MarkdownFile.MARKDOWN_FILE.FILE_NO }, true);
}
