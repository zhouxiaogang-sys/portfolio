/*
 * This file is generated by jOOQ.
 */
package jp.co.sysystem.training.guide.jooq.tables.records;


import java.time.LocalDateTime;

import jp.co.sysystem.training.guide.jooq.tables.MarkdownFileHistory;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * マークダウンファイル変更履歴テーブル
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MarkdownFileHistoryRecord extends UpdatableRecordImpl<MarkdownFileHistoryRecord> implements Record8<UInteger, UInteger, String, LocalDateTime, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>trainingguidebook.markdown_file_history.history_no</code>. 履歴番号
     */
    public void setHistoryNo(UInteger value) {
        set(0, value);
    }

    /**
     * Getter for
     * <code>trainingguidebook.markdown_file_history.history_no</code>. 履歴番号
     */
    public UInteger getHistoryNo() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>trainingguidebook.markdown_file_history.file_no</code>.
     * ファイル番号
     */
    public void setFileNo(UInteger value) {
        set(1, value);
    }

    /**
     * Getter for <code>trainingguidebook.markdown_file_history.file_no</code>.
     * ファイル番号
     */
    public UInteger getFileNo() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>trainingguidebook.markdown_file_history.modifier</code>.
     * 変更者
     */
    public void setModifier(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>trainingguidebook.markdown_file_history.modifier</code>.
     * 変更者
     */
    public String getModifier() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>trainingguidebook.markdown_file_history.modify_time</code>. 変更日時
     */
    public void setModifyTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for
     * <code>trainingguidebook.markdown_file_history.modify_time</code>. 変更日時
     */
    public LocalDateTime getModifyTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for
     * <code>trainingguidebook.markdown_file_history.modify_type</code>.
     * 変更種別：作成/更新/削除
     */
    public void setModifyType(String value) {
        set(4, value);
    }

    /**
     * Getter for
     * <code>trainingguidebook.markdown_file_history.modify_type</code>.
     * 変更種別：作成/更新/削除
     */
    public String getModifyType() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>trainingguidebook.markdown_file_history.modify_content</code>. 変更内容
     */
    public void setModifyContent(String value) {
        set(5, value);
    }

    /**
     * Getter for
     * <code>trainingguidebook.markdown_file_history.modify_content</code>. 変更内容
     */
    public String getModifyContent() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>trainingguidebook.markdown_file_history.old_file_name</code>.
     * 変更前のファイル名
     */
    public void setOldFileName(String value) {
        set(6, value);
    }

    /**
     * Getter for
     * <code>trainingguidebook.markdown_file_history.old_file_name</code>.
     * 変更前のファイル名
     */
    public String getOldFileName() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>trainingguidebook.markdown_file_history.new_file_name</code>.
     * 変更後のファイル名
     */
    public void setNewFileName(String value) {
        set(7, value);
    }

    /**
     * Getter for
     * <code>trainingguidebook.markdown_file_history.new_file_name</code>.
     * 変更後のファイル名
     */
    public String getNewFileName() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<UInteger, UInteger, String, LocalDateTime, String, String, String, String> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<UInteger, UInteger, String, LocalDateTime, String, String, String, String> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return MarkdownFileHistory.MARKDOWN_FILE_HISTORY.HISTORY_NO;
    }

    @Override
    public Field<UInteger> field2() {
        return MarkdownFileHistory.MARKDOWN_FILE_HISTORY.FILE_NO;
    }

    @Override
    public Field<String> field3() {
        return MarkdownFileHistory.MARKDOWN_FILE_HISTORY.MODIFIER;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return MarkdownFileHistory.MARKDOWN_FILE_HISTORY.MODIFY_TIME;
    }

    @Override
    public Field<String> field5() {
        return MarkdownFileHistory.MARKDOWN_FILE_HISTORY.MODIFY_TYPE;
    }

    @Override
    public Field<String> field6() {
        return MarkdownFileHistory.MARKDOWN_FILE_HISTORY.MODIFY_CONTENT;
    }

    @Override
    public Field<String> field7() {
        return MarkdownFileHistory.MARKDOWN_FILE_HISTORY.OLD_FILE_NAME;
    }

    @Override
    public Field<String> field8() {
        return MarkdownFileHistory.MARKDOWN_FILE_HISTORY.NEW_FILE_NAME;
    }

    @Override
    public UInteger component1() {
        return getHistoryNo();
    }

    @Override
    public UInteger component2() {
        return getFileNo();
    }

    @Override
    public String component3() {
        return getModifier();
    }

    @Override
    public LocalDateTime component4() {
        return getModifyTime();
    }

    @Override
    public String component5() {
        return getModifyType();
    }

    @Override
    public String component6() {
        return getModifyContent();
    }

    @Override
    public String component7() {
        return getOldFileName();
    }

    @Override
    public String component8() {
        return getNewFileName();
    }

    @Override
    public UInteger value1() {
        return getHistoryNo();
    }

    @Override
    public UInteger value2() {
        return getFileNo();
    }

    @Override
    public String value3() {
        return getModifier();
    }

    @Override
    public LocalDateTime value4() {
        return getModifyTime();
    }

    @Override
    public String value5() {
        return getModifyType();
    }

    @Override
    public String value6() {
        return getModifyContent();
    }

    @Override
    public String value7() {
        return getOldFileName();
    }

    @Override
    public String value8() {
        return getNewFileName();
    }

    @Override
    public MarkdownFileHistoryRecord value1(UInteger value) {
        setHistoryNo(value);
        return this;
    }

    @Override
    public MarkdownFileHistoryRecord value2(UInteger value) {
        setFileNo(value);
        return this;
    }

    @Override
    public MarkdownFileHistoryRecord value3(String value) {
        setModifier(value);
        return this;
    }

    @Override
    public MarkdownFileHistoryRecord value4(LocalDateTime value) {
        setModifyTime(value);
        return this;
    }

    @Override
    public MarkdownFileHistoryRecord value5(String value) {
        setModifyType(value);
        return this;
    }

    @Override
    public MarkdownFileHistoryRecord value6(String value) {
        setModifyContent(value);
        return this;
    }

    @Override
    public MarkdownFileHistoryRecord value7(String value) {
        setOldFileName(value);
        return this;
    }

    @Override
    public MarkdownFileHistoryRecord value8(String value) {
        setNewFileName(value);
        return this;
    }

    @Override
    public MarkdownFileHistoryRecord values(UInteger value1, UInteger value2, String value3, LocalDateTime value4, String value5, String value6, String value7, String value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MarkdownFileHistoryRecord
     */
    public MarkdownFileHistoryRecord() {
        super(MarkdownFileHistory.MARKDOWN_FILE_HISTORY);
    }

    /**
     * Create a detached, initialised MarkdownFileHistoryRecord
     */
    public MarkdownFileHistoryRecord(UInteger historyNo, UInteger fileNo, String modifier, LocalDateTime modifyTime, String modifyType, String modifyContent, String oldFileName, String newFileName) {
        super(MarkdownFileHistory.MARKDOWN_FILE_HISTORY);

        setHistoryNo(historyNo);
        setFileNo(fileNo);
        setModifier(modifier);
        setModifyTime(modifyTime);
        setModifyType(modifyType);
        setModifyContent(modifyContent);
        setOldFileName(oldFileName);
        setNewFileName(newFileName);
        resetChangedOnNotNull();
    }
}
